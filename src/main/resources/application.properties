spring.datasource.driver-class-name=com.mysql.jdbc.Driver



spring.datasource.url = jdbc:mysql://localhost/parcroulant
spring.datasource.username = root
spring.datasource.password = root



#security.basic.enabled=true
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration


# Show or not log for each sql query
spring.jpa.show-sql = true
server.port=8081
# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = create

spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration

# Naming strategy
#spring.jpa.hibernate.naming.implicit-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL55Dialect




# Define a custom port (instead of the default 8080)

# The format used for the keystore
server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
server.ssl.key-store=ssl/keyStore.p12
# The password used to generate the certificate
#server.ssl.key-password=MY_PASSWORD
server.ssl.key-store-password=azerty
# Trust store that holds SSL certificates.
#server.ssl.trust-store=/home/mootaz/projects/projet_rania/bach_2.0/back/src/main/resources/trustStore.jks
# Password used to access the trust store.
#server.ssl.trust-store-password=changeits
# Type of the trust store.
#server.ssl.trust-store-type=JKS
# Whether client authentication is wanted ("want") or needed ("need").
server.ssl.client-auth=need
